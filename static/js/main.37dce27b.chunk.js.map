{"version":3,"sources":["components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm/BudgetForm.js","redux/action.js","components/BudgetForm/BudgetFormConteyner.js","components/ExpensesForm/ExpenseForm.js","components/ExpensesForm/ExpenseFormConteyner.js","components/ExpensesTable/ExpensesTable.js","components/ExpensesTable/ExpensesTableConteyner.js","components/Values/Stat.js","components/Values/Values.js","components/Values/ValuesConteyner.js","components/App.js","redux/reduser.js","redux/store.js","index.js"],"names":["StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","type","value","onChange","name","defaultProps","StyledButton","button","Button","onClick","BudgetForm","state","budget","handleChange","e","setState","Number","target","handleSubmit","preventDefault","this","Component","TypeActions","removeExpense","id","payload","connect","dispatch","saveBudget","ExpenseForm","amount","addExpense","expenses","expense","shortid","generate","Table","table","ExpensesTable","onRemove","map","key","Container","div","isPositive","p","Value","Stat","Contayner","section","Values","reduce","total","BudgetFormConteyner","ValuesConteyner","ExpenseFormConteyner","length","ExpensesTableConteyner","combineReducers","filter","store","createStore","reducer","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37dce27b.chunk.js","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 16px;\r\n  width: 100%;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst Form = ({ onSubmit = () => null, children }) => (\r\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\r\n);\r\n\r\nForm.propTypes = {\r\n  onSubmit: propTypes.func.isRequired,\r\n  children: propTypes.arrayOf(propTypes.shape().isRequired).isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  color: #171718;\r\n  cursor: pointer;\r\n  ${props => props.customStyles}\r\n`;\r\n\r\nconst Label = ({ children, customStyles }) => (\r\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\r\n);\r\nLabel.propTypes = {\r\n  children: propTypes.arrayOf(propTypes.any.isRequired).isRequired,\r\n  customStyles: propTypes.string.isRequired,\r\n};\r\n\r\nexport default Label;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n  color: #171718;\r\n  font: inherit;\r\n  font-size: 1.2rem;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #bdbdbd;\r\n  width: 100%;\r\n  outline: 0;\r\n\r\n  &:focus {\r\n    border: 1px solid #2b32b2;\r\n  }\r\n`;\r\n\r\nconst Input = ({ type = 'text', value, onChange = () => null, name }) => (\r\n  <StyledInput type={type} value={value} onChange={onChange} name={name} />\r\n);\r\n\r\nInput.propTypes = {\r\n  type: propTypes.string.isRequired,\r\n  value: propTypes.oneOfType([propTypes.string, propTypes.number]),\r\n  onChange: propTypes.func.isRequired,\r\n  name: propTypes.string,\r\n};\r\n\r\nInput.defaultProps = {\r\n  name: '',\r\n  value: 0,\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 8px 24px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n  font: inherit;\r\n  text-transform: uppercase;\r\n  user-select: none;\r\n\r\n  transition: background-color 200ms ease-in-out;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\nconst Button = ({ type, label, onClick }) => (\r\n  <StyledButton type={type} onClick={onClick}>\r\n    {label}\r\n  </StyledButton>\r\n);\r\n\r\nButton.propTypes = {\r\n  type: propTypes.string,\r\n  label: propTypes.string,\r\n  onClick: propTypes.func,\r\n};\r\n\r\nButton.defaultProps = {\r\n  label: '',\r\n  type: 'button',\r\n  onClick: () => null,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport Form from '../shared/Form';\r\nimport Label from '../shared/Label';\r\nimport Input from '../shared/Input';\r\nimport Button from '../shared/Button';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nexport default class BudgetForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: propTypes.func.isRequired,\r\n  };\r\n\r\n  state = { budget: 0 };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      budget: Number(e.target.value),\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { budget } = this.state;\r\n\r\n    this.props.onSubmit(budget);\r\n    this.setState({ budget: 0 });\r\n  };\r\n\r\n  render() {\r\n    const { budget } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter your total budget\r\n          <Input type=\"number\" value={budget} onChange={this.handleChange} />\r\n        </Label>\r\n\r\n        <Button label=\"Save\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import shortid from 'shortid';\r\n\r\nexport const TypeActions = {\r\n  SAVE_BUDGET: 'SAVE_BUDGET',\r\n  ADD_EXPENSE: 'ADD_EXPENSE',\r\n  REMOVE_EXPENSE: 'REMOVE_EXPENSE',\r\n};\r\n\r\nexport const saveBudget = value => ({\r\n  type: TypeActions.SAVE_BUDGET,\r\n  payload: value,\r\n});\r\n\r\nexport const addExpense = (name, amount) => ({\r\n  type: TypeActions.ADD_EXPENSE,\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    amount: Number(amount),\r\n  },\r\n});\r\n\r\nexport const removeExpense = id => ({\r\n  type: TypeActions.REMOVE_EXPENSE,\r\n  payload: id,\r\n});\r\n","import { connect } from 'react-redux';\r\nimport BudgetForm from './BudgetForm';\r\nimport { saveBudget } from '../../redux/action';\r\n\r\nconst mapStateToProps = state => ({\r\n  budget: state.budget,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: value => dispatch(saveBudget(value)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(BudgetForm);\r\n","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport Form from '../shared/Form';\r\nimport Label from '../shared/Label';\r\nimport Input from '../shared/Input';\r\nimport Button from '../shared/Button';\r\n\r\nconst labelStyles = `\r\n  margin-bottom: 16px;  \r\n`;\r\n\r\nexport default class ExpenseForm extends Component {\r\n  static propTypes = {\r\n    addExpense: propTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    amount: 0,\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, amount } = this.state;\r\n\r\n    this.props.addExpense(name, amount);\r\n    this.setState({ name: '', amount: 0 });\r\n  };\r\n\r\n  render() {\r\n    const { name, amount } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <Label customStyles={labelStyles}>\r\n          Enter expense amount\r\n          <Input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            value={amount}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n\r\n        <Button label=\"Add\" type=\"submit\" />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport { addExpense, removeExpense } from '../../redux/action';\r\n\r\nconst mapStateToProps = state => ({\r\n  expenses: state.expense,\r\n  name: state.name,\r\n  amount: state.amount,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addExpense: (name, amount) => dispatch(addExpense(name, amount)),\r\n  removeExpense: id => dispatch(removeExpense(id)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ExpenseForm);\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Button from '../shared/Button';\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  width: 100%;\r\n\r\n  tr {\r\n    border-bottom: 1px solid #212121;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding-top: 8px;\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n\r\nconst ExpensesTable = ({ expenses = [], onRemove }) => (\r\n  <Table>\r\n    <thead>\r\n      <tr>\r\n        <th>Expense name</th>\r\n        <th>Expense amount</th>\r\n        <th />\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {expenses.map(({ id, name, amount }) => (\r\n        <tr key={id}>\r\n          <td>{name}</td>\r\n          <td>{amount}</td>\r\n          <td>\r\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </Table>\r\n);\r\n\r\nExpensesTable.propTypes = {\r\n  expenses: propTypes.arrayOf(\r\n    propTypes.shape({\r\n      id: propTypes.string.isRequired,\r\n      name: propTypes.string.isRequired,\r\n      amount: propTypes.number.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onRemove: propTypes.func.isRequired,\r\n};\r\n\r\nexport default ExpensesTable;\r\n","import { connect } from 'react-redux';\r\nimport ExpensesTable from './ExpensesTable';\r\nimport { removeExpense } from '../../redux/action';\r\n\r\nconst mapStateToProps = state => ({\r\n  expenses: state.expense,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onRemove: id => dispatch(removeExpense(id)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(ExpensesTable);\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 8px 24px;\r\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\r\n  user-select: none;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Value = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 48px;\r\n`;\r\n\r\nconst Stat = ({ label, value, isPositive }) => (\r\n  <Container isPositive={isPositive}>\r\n    <Label>{label}</Label>\r\n    <Value>{value}&nbsp;&#x24;</Value>\r\n  </Container>\r\n);\r\n\r\nStat.defaultProps = {\r\n  isPositive: false,\r\n};\r\n\r\nStat.propTypes = {\r\n  label: propTypes.string.isRequired,\r\n  value: propTypes.number.isRequired,\r\n  isPositive: propTypes.bool,\r\n};\r\n\r\nexport default Stat;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Stat from './Stat';\r\n\r\nconst Contayner = styled.section`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Values = ({ budget, expenses }) => (\r\n  <Contayner>\r\n    <Stat label=\"Budget\" value={budget} isPositive />\r\n    <Stat label=\"Expenses\" value={expenses} />\r\n    <Stat\r\n      label=\"Balance\"\r\n      value={budget - expenses}\r\n      isPositive={budget - expenses >= 0}\r\n    />\r\n  </Contayner>\r\n);\r\n\r\nValues.propTypes = {\r\n  budget: propTypes.number.isRequired,\r\n  expenses: propTypes.number.isRequired,\r\n};\r\n\r\nexport default Values;\r\n","/* eslint-disable no-param-reassign */\r\nimport { connect } from 'react-redux';\r\nimport Values from './Values';\r\n\r\nconst calculateTotalExpenses = expenses => {\r\n  // eslint-disable-next-line no-return-assign\r\n  return expenses.reduce((total, expense) => (total += expense.amount), 0);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  budget: state.budget,\r\n  expenses: calculateTotalExpenses(state.expense),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Values);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport BudgetFormConteyner from './BudgetForm/BudgetFormConteyner';\r\nimport ExpenseFormConteyner from './ExpensesForm/ExpenseFormConteyner';\r\nimport ExpensesTableConteyner from './ExpensesTable/ExpensesTableConteyner';\r\nimport ValuesConteyner from './Values/ValuesConteyner';\r\n\r\nconst Contayner = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 400px 1fr;\r\n  align-items: flex-start;\r\n  grid-gap: 24px;\r\n  width: 1000px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst App = expenses => (\r\n  <Contayner>\r\n    <BudgetFormConteyner />\r\n    <ValuesConteyner />\r\n    <ExpenseFormConteyner />\r\n    {expenses.expenses.length > 0 && <ExpensesTableConteyner />}\r\n  </Contayner>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  expenses: state.expense,\r\n});\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { TypeActions } from './action';\r\n\r\nconst expenseReduser = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case TypeActions.ADD_EXPENSE:\r\n      return [...state, payload];\r\n    case TypeActions.REMOVE_EXPENSE:\r\n      return state.filter(expense => expense.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst budgetReduser = (state = 0, { type, payload }) => {\r\n  switch (type) {\r\n    case TypeActions.SAVE_BUDGET:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  budget: budgetReduser,\r\n  expense: expenseReduser,\r\n});\r\n","import { createStore } from 'redux';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport reducer from './reduser';\r\n\r\nconst store = createStore(reducer, devToolsEnhancer());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/App';\r\nimport store from './redux/store';\r\n\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}